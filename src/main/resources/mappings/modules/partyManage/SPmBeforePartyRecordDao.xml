<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.partyManage.dao.SPmBeforePartyRecordDao">
    
	<sql id="sPmBeforePartyRecordColumns">
		a.id AS "id",
		a.name AS "name",
		a.sex AS "sex",
		a.origin_place AS "originPlace",
		a.birth_time AS "birthTime",
		a.education AS "education",
		a.work_time AS "workTime",
		a.jion_app_time AS "jionAppTime",
		a.activist_time AS "activistTime",
		a.meeting_time AS "meetingTime",
		a.examine_time AS "examineTime",
		a.work_post AS "workPost",
		a.party_option AS "partyOption",
		a.super_party_record AS "superPartyRecord",
		a.nation AS "nation",
		a.create_by AS "createBy.id",
		a.update_by AS "updateBy.id",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.pro_id AS "proId"
	</sql>
	
	<sql id="sPmBeforePartyRecordJoins">
	</sql>
    
	<select id="get" resultType="SPmBeforePartyRecord">
		SELECT 
			<include refid="sPmBeforePartyRecordColumns"/>
		FROM s_pm_before_party_record a
		<include refid="sPmBeforePartyRecordJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getByproId" resultType="SPmBeforePartyRecord">
		SELECT
		<include refid="sPmBeforePartyRecordColumns"/>
		FROM s_pm_before_party_record a
		<include refid="sPmBeforePartyRecordJoins"/>
		WHERE a.del_flag = '0'
		AND a.pro_id = #{proId}
	</select>

	<select id="findList" resultType="SPmBeforePartyRecord">
		SELECT 
			<include refid="sPmBeforePartyRecordColumns"/>
		FROM s_pm_before_party_record a
		<include refid="sPmBeforePartyRecordJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="SPmBeforePartyRecord">
		SELECT 
			<include refid="sPmBeforePartyRecordColumns"/>
		FROM s_pm_before_party_record a
		<include refid="sPmBeforePartyRecordJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO s_pm_before_party_record(
			id,
			name,
			sex,
			origin_place,
			birth_time,
			education,
			work_time,
			jion_app_time,
			activist_time,
			meeting_time,
			examine_time,
			work_post,
			party_option,
			super_party_record,
			nation,
			create_by,
			update_by,
			create_date,
			update_date,
			remarks,
			del_flag,
			pro_id
		) VALUES (
			#{id},
			#{name},
			#{sex},
			#{originPlace},
			#{birthTime},
			#{education},
			#{workTime},
			#{jionAppTime},
			#{activistTime},
			#{meetingTime},
			#{examineTime},
			#{workPost},
			#{partyOption},
			#{superPartyRecord},
			#{nation},
			#{createBy.id},
			#{updateBy.id},
			#{createDate},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{proId}
		)
	</insert>
	
	<update id="update">
		UPDATE s_pm_before_party_record SET 	
			name = #{name},
			sex = #{sex},
			origin_place = #{originPlace},
			birth_time = #{birthTime},
			education = #{education},
			work_time = #{workTime},
			jion_app_time = #{jionAppTime},
			activist_time = #{activistTime},
			meeting_time = #{meetingTime},
			examine_time = #{examineTime},
			work_post = #{workPost},
			party_option = #{partyOption},
			super_party_record = #{superPartyRecord},
			nation = #{nation},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			pro_id = #{proId}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE s_pm_before_party_record SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>